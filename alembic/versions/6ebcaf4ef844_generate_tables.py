"""generate tables

Revision ID: 6ebcaf4ef844
Revises: 
Create Date: 2025-01-30 10:04:07.374842

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6ebcaf4ef844'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('type', postgresql.ENUM('INCOME', 'SUBSCRIPTIONS_AND_MEMBERSHIPS', 'VARIABLE_EXPENSES', 'SAVINGS_AND_INVESTMENTS', 'DEBT_PAYMENTS', 'FIXED_EXPENSES', 'DISCRETIONARY_EXPENSES', 'MISCELLANEOUS', name='category_type'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_categories_uuid'), 'categories', ['uuid'], unique=False)
    op.create_table('user_table',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('role', sa.Enum('Admin', 'User', 'User_Manager', 'User_Admin', 'User_Viewer', 'User_Editor', name='user_role'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_user_table_email'), 'user_table', ['email'], unique=True)
    op.create_index(op.f('ix_user_table_uuid'), 'user_table', ['uuid'], unique=False)
    op.create_table('projects',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('project_name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_projects_uuid'), 'projects', ['uuid'], unique=False)
    op.create_table('subscriptions',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('category_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('amount', sa.BigInteger(), nullable=False),
    sa.Column('currency', sa.String(length=10), nullable=True),
    sa.Column('billing_frequency', sa.String(length=50), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('next_billing_date', sa.DateTime(), nullable=True),
    sa.Column('auto_renew', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('cancellation_date', sa.DateTime(), nullable=True),
    sa.Column('trial_period', sa.Boolean(), nullable=True),
    sa.Column('trial_end_date', sa.DateTime(), nullable=True),
    sa.Column('total_amount_spent', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('contract_length', sa.String(length=50), nullable=True),
    sa.Column('contract_end_date', sa.DateTime(), nullable=True),
    sa.Column('usage_limits', sa.String(length=255), nullable=True),
    sa.Column('support_contact', sa.String(length=255), nullable=True),
    sa.Column('website_url', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.uuid'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_subscriptions_uuid'), 'subscriptions', ['uuid'], unique=False)
    op.create_table('scopes',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('scope_name', sa.String(length=32), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('budget', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_scopes_uuid'), 'scopes', ['uuid'], unique=False)
    op.create_table('expenses',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('category_id', sa.UUID(), nullable=False),
    sa.Column('scope_id', sa.UUID(), nullable=True),
    sa.Column('amount', sa.BigInteger(), nullable=False),
    sa.Column('currency', sa.String(length=10), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.uuid'], ),
    sa.ForeignKeyConstraint(['scope_id'], ['scopes.uuid'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_expenses_uuid'), 'expenses', ['uuid'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_expenses_uuid'), table_name='expenses')
    op.drop_table('expenses')
    op.drop_index(op.f('ix_scopes_uuid'), table_name='scopes')
    op.drop_table('scopes')
    op.drop_index(op.f('ix_subscriptions_uuid'), table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index(op.f('ix_projects_uuid'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_user_table_uuid'), table_name='user_table')
    op.drop_index(op.f('ix_user_table_email'), table_name='user_table')
    op.drop_table('user_table')
    op.drop_index(op.f('ix_categories_uuid'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
